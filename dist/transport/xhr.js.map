{"version":3,"sources":["transport/xhr.js"],"names":["global","XHR","provide","Weakmap","Pledge","isObject","iterate","Url","functionMerge","XDR","XDomainRequest","regexMatchSpaces","regexMatchOpeningBrackets","regexMatchClosingBrackets","storage","checkState","this","readyState","abort","request","method","pointer","result","properties","get","settings","url","data","xhr","local","deferred","defer","boundCheckState","bind","timeout","parameter","set","cache","Date","property","value","encodeURIComponent","replace","xhrOptions","ontimeout","onerror","onabort","reject","onprogress","onreadystatechange","clearTimeout","setTimeout","onload","status","resolve","responseText","open","href","setRequestHeader","accept","contentType","header","send","pledge","TransportXhr","prototype","call","post","put","patch","delete","head","async","username","password","XMLHttpRequest"],"mappings":"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","file":"xhr.js","sourcesContent":["/**\n * @use /demand/weakmap\n * @use /demand/pledge\n * @use /demand/validator/isObject\n * @use /demand/function/iterate\n *\n * @require ../url\n * @require ../function/merge\n */\n\n(function(global, XHR) {\n\t'use strict';\n\n\tfunction definition(Weakmap, Pledge, isObject, iterate, Url, functionMerge) {\n\t\tvar XDR                       = 'XDomainRequest' in global &&  global.XDomainRequest || XHR,\n\t\t\tregexMatchSpaces          = /%20/g,\n\t\t\tregexMatchOpeningBrackets = /%5B/g,\n\t\t\tregexMatchClosingBrackets = /%5D/g,\n\t\t\tstorage                   = new Weakmap();\n\n\t\tfunction serialize(parameter) {\n\t\t\tvar result = '';\n\n\t\t\titerate(parameter, function(property, value) {\n\t\t\t\tresult += (!result ? '' : '&') + encodeURIComponent(property) + '=' + encodeURIComponent(value);\n\t\t\t});\n\n\t\t\treturn result\n\t\t\t\t.replace(regexMatchSpaces, '+')\n\t\t\t\t.replace(regexMatchOpeningBrackets, '[')\n\t\t\t\t.replace(regexMatchClosingBrackets, ']');\n\t\t}\n\n\t\tfunction checkState() {\n\t\t\tif(this.readyState < 4) {\n\t\t\t\tthis.abort();\n\t\t\t}\n\t\t}\n\n\t\tfunction request(method) {\n\t\t\tvar properties      = storage.get(this),\n\t\t\t\tsettings        = properties.settings,\n\t\t\t\turl             = properties.url,\n\t\t\t\tdata            = properties.data,\n\t\t\t\txhr             = url.local ? new XHR() : new XDR(),\n\t\t\t\tdeferred        = Pledge.defer(),\n\t\t\t\tboundCheckState = checkState.bind(xhr),\n\t\t\t\ttimeout         = settings.timeout,\n\t\t\t\tpointer;\n\n\t\t\tif(data && method === 'GET') {\n\t\t\t\titerate(data, url.parameter.set, url);\n\n\t\t\t\tdata = null;\n\t\t\t}\n\n\t\t\tif(!settings.cache) {\n\t\t\t\turl.parameter.set('nucleus', +new Date());\n\t\t\t}\n\n\t\t\tif(data) {\n\t\t\t\tdata = serialize(data);\n\t\t\t}\n\n\t\t\tif(isObject(settings.xhrOptions)) {\n\t\t\t\titerate(settings.xhrOptions, function(property, value) {\n\t\t\t\t\txhr[property] = value;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\txhr.ontimeout  = xhr.onerror = xhr.onabort = function() {\n\t\t\t\tdeferred.reject(xhr);\n\t\t\t};\n\t\t\txhr.onprogress = xhr.onreadystatechange = function() {\n\t\t\t\tclearTimeout(pointer);\n\n\t\t\t\tpointer = setTimeout(boundCheckState, timeout);\n\t\t\t};\n\t\t\txhr.onload     = function() {\n\t\t\t\tpointer = clearTimeout(pointer);\n\n\t\t\t\tif(!('status' in xhr) || xhr.status === 200) {\n\t\t\t\t\tdeferred.resolve(xhr.responseText, xhr);\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.reject(xhr);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.open(method, url.href, true);\n\n\t\t\tif(xhr.setRequestHeader) {\n\t\t\t\txhr.setRequestHeader('Accept', settings.accept);\n\n\t\t\t\tif(data && method !== 'GET') {\n\t\t\t\t\txhr.setRequestHeader('Content-Type', settings.contentType);\n\t\t\t\t}\n\n\t\t\t\tif(isObject(settings.header)) {\n\t\t\t\t\titerate(settings.header, function(header, value) {\n\t\t\t\t\t\txhr.setRequestHeader(header, value);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txhr.send(data);\n\n\t\t\tpointer = setTimeout(boundCheckState, timeout);\n\n\t\t\treturn deferred.pledge;\n\t\t}\n\n\t\tfunction TransportXhr(url, data, settings) {\n\t\t\tstorage.set(this, {\n\t\t\t\tsettings: functionMerge({}, TransportXhr.settings, settings),\n\t\t\t\turl:      new Url(url),\n\t\t\t\tdata:     data\n\t\t\t});\n\n\t\t\treturn this;\n\t\t}\n\n\t\tTransportXhr.prototype = {\n\t\t\tget:      function() {\n\t\t\t\treturn request.call(this, 'GET');\n\t\t\t},\n\t\t\tpost:     function() {\n\t\t\t\treturn request.call(this, 'POST');\n\t\t\t},\n\t\t\tput:      function() {\n\t\t\t\treturn request.call(this, 'PUT');\n\t\t\t},\n\t\t\tpatch:      function() {\n\t\t\t\treturn request.call(this, 'PATCH');\n\t\t\t},\n\t\t\t'delete': function() {\n\t\t\t\treturn request.call(this, 'DELETE');\n\t\t\t},\n\t\t\thead:     function() {\n\t\t\t\treturn request.call(this, 'HEAD');\n\t\t\t}\n\t\t};\n\n\t\tTransportXhr.settings = {\n\t\t\taccept:      '*/*',\n\t\t\ttimeout:     8000,\n\t\t\tasync:       true,\n\t\t\tcache:       false,\n\t\t\tusername:    null,\n\t\t\tpassword:    null,\n\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n\t\t\theader:      {},\n\t\t\txhrOptions:  {}\n\t\t};\n\n\t\treturn TransportXhr;\n\t}\n\n\tprovide([ '/demand/weakmap', '/demand/pledge', '/demand/validator/isObject', '/demand/function/iterate', '../url', '../function/merge' ], definition);\n}(this, XMLHttpRequest));\n"]}