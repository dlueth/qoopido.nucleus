{"version":3,"sources":["transport/xhr.js"],"names":["global","XHR","provide","Weakmap","Pledge","isObject","iterate","Url","functionMerge","XDR","XDomainRequest","regexMatchSpaces","regexMatchOpeningBrackets","regexMatchClosingBrackets","storage","request","method","pointer","result","properties","get","this","settings","url","data","xhr","local","deferred","defer","boundCheckState","readyState","abort","bind","timeout","parameter","set","cache","Date","property","value","encodeURIComponent","replace","xhrOptions","ontimeout","onerror","onabort","reject","onprogress","onreadystatechange","clearTimeout","setTimeout","onload","status","resolve","responseText","open","href","setRequestHeader","accept","contentType","header","send","pledge","TransportXhr","prototype","call","post","put","patch","delete","head","async","username","password","XMLHttpRequest"],"mappings":"CAUC,SAASA,EAAQC,GACjB,aAkJAC,SAAU,kBAAmB,iBAAkB,6BAA8B,2BAA4B,SAAU,qBAhJnH,SAAoBC,EAASC,EAAQC,EAAUC,EAASC,EAAKC,GAC5D,IAAIC,EAA4B,mBAAoBT,GAAWA,EAAOU,gBAAkBT,EACvFU,EAA4B,OAC5BC,EAA4B,OAC5BC,EAA4B,OAC5BC,EAA4B,IAAIX,EAqBjC,SAASY,EAAQC,GAChB,IAQCC,EA3BGC,EAmBAC,EAAkBL,EAAQM,IAAIC,MACjCC,EAAkBH,EAAWG,SAC7BC,EAAkBJ,EAAWI,IAC7BC,EAAkBL,EAAWK,KAC7BC,EAAkBF,EAAIG,MAAQ,IAAIzB,EAAQ,IAAIQ,EAC9CkB,EAAkBvB,EAAOwB,QACzBC,EAbF,WACIR,KAAKS,WAAa,GACpBT,KAAKU,SAWwBC,KAAKP,GAClCQ,EAAkBX,EAASW,QA6D5B,OA1DGT,GAAmB,QAAXR,IACVV,EAAQkB,EAAMD,EAAIW,UAAUC,KAE5BX,EAAO,MAGJF,EAASc,OACZb,EAAIW,UAAUC,IAAI,WAAY,IAAIE,MAGhCb,IAvCCN,EAAS,GAEbZ,EAsCkBkB,EAtCC,SAASc,EAAUC,GACrCrB,IAAYA,EAAc,IAAL,IAAYsB,mBAAmBF,GAAY,IAAME,mBAAmBD,KAqCzFf,EAlCMN,EACLuB,QAAQ9B,EAAkB,KAC1B8B,QAAQ7B,EAA2B,KACnC6B,QAAQ5B,EAA2B,MAkClCR,EAASiB,EAASoB,aACpBpC,EAAQgB,EAASoB,WAAY,SAASJ,EAAUC,GAC/Cd,EAAIa,GAAYC,IAIlBd,EAAIkB,UAAalB,EAAImB,QAAUnB,EAAIoB,QAAU,WAC5ClB,EAASmB,OAAOrB,IAEjBA,EAAIsB,WAAatB,EAAIuB,mBAAqB,WACzCC,aAAahC,GAEbA,EAAUiC,WAAWrB,EAAiBI,IAEvCR,EAAI0B,OAAa,WAChBlC,EAAUgC,aAAahC,GAElB,WAAYQ,GAAuB,MAAfA,EAAI2B,OAG5BzB,EAASmB,OAAOrB,GAFhBE,EAAS0B,QAAQ5B,EAAI6B,aAAc7B,IAMrCA,EAAI8B,KAAKvC,EAAQO,EAAIiC,MAAM,GAExB/B,EAAIgC,mBACNhC,EAAIgC,iBAAiB,SAAUnC,EAASoC,QAErClC,GAAmB,QAAXR,GACVS,EAAIgC,iBAAiB,eAAgBnC,EAASqC,aAG5CtD,EAASiB,EAASsC,SACpBtD,EAAQgB,EAASsC,OAAQ,SAASA,EAAQrB,GACzCd,EAAIgC,iBAAiBG,EAAQrB,MAKhCd,EAAIoC,KAAKrC,GAETP,EAAUiC,WAAWrB,EAAiBI,GAE/BN,EAASmC,OAGjB,SAASC,EAAaxC,EAAKC,EAAMF,GAOhC,OANAR,EAAQqB,IAAId,MACXC,SAAUd,KAAkBuD,EAAazC,SAAUA,GACnDC,IAAU,IAAIhB,EAAIgB,GAClBC,KAAUA,IAGJH,KAoCR,OAjCA0C,EAAaC,WACZ5C,IAAU,WACT,OAAOL,EAAQkD,KAAK5C,KAAM,QAE3B6C,KAAU,WACT,OAAOnD,EAAQkD,KAAK5C,KAAM,SAE3B8C,IAAU,WACT,OAAOpD,EAAQkD,KAAK5C,KAAM,QAE3B+C,MAAY,WACX,OAAOrD,EAAQkD,KAAK5C,KAAM,UAE3BgD,OAAU,WACT,OAAOtD,EAAQkD,KAAK5C,KAAM,WAE3BiD,KAAU,WACT,OAAOvD,EAAQkD,KAAK5C,KAAM,UAI5B0C,EAAazC,UACZoC,OAAa,MACbzB,QAAa,IACbsC,OAAa,EACbnC,OAAa,EACboC,SAAa,KACbC,SAAa,KACbd,YAAa,mDACbC,UACAlB,eAGMqB,IAhJT,CAoJE1C,KAAMqD","file":"xhr.js","sourcesContent":["/**\n * @use /demand/weakmap\n * @use /demand/pledge\n * @use /demand/validator/isObject\n * @use /demand/function/iterate\n *\n * @require ../url\n * @require ../function/merge\n */\n\n(function(global, XHR) {\n\t'use strict';\n\n\tfunction definition(Weakmap, Pledge, isObject, iterate, Url, functionMerge) {\n\t\tvar XDR                       = 'XDomainRequest' in global &&  global.XDomainRequest || XHR,\n\t\t\tregexMatchSpaces          = /%20/g,\n\t\t\tregexMatchOpeningBrackets = /%5B/g,\n\t\t\tregexMatchClosingBrackets = /%5D/g,\n\t\t\tstorage                   = new Weakmap();\n\n\t\tfunction serialize(parameter) {\n\t\t\tvar result = '';\n\n\t\t\titerate(parameter, function(property, value) {\n\t\t\t\tresult += (!result ? '' : '&') + encodeURIComponent(property) + '=' + encodeURIComponent(value);\n\t\t\t});\n\n\t\t\treturn result\n\t\t\t\t.replace(regexMatchSpaces, '+')\n\t\t\t\t.replace(regexMatchOpeningBrackets, '[')\n\t\t\t\t.replace(regexMatchClosingBrackets, ']');\n\t\t}\n\n\t\tfunction checkState() {\n\t\t\tif(this.readyState < 4) {\n\t\t\t\tthis.abort();\n\t\t\t}\n\t\t}\n\n\t\tfunction request(method) {\n\t\t\tvar properties      = storage.get(this),\n\t\t\t\tsettings        = properties.settings,\n\t\t\t\turl             = properties.url,\n\t\t\t\tdata            = properties.data,\n\t\t\t\txhr             = url.local ? new XHR() : new XDR(),\n\t\t\t\tdeferred        = Pledge.defer(),\n\t\t\t\tboundCheckState = checkState.bind(xhr),\n\t\t\t\ttimeout         = settings.timeout,\n\t\t\t\tpointer;\n\n\t\t\tif(data && method === 'GET') {\n\t\t\t\titerate(data, url.parameter.set);\n\n\t\t\t\tdata = null;\n\t\t\t}\n\n\t\t\tif(!settings.cache) {\n\t\t\t\turl.parameter.set('nucleus', +new Date());\n\t\t\t}\n\n\t\t\tif(data) {\n\t\t\t\tdata = serialize(data);\n\t\t\t}\n\n\t\t\tif(isObject(settings.xhrOptions)) {\n\t\t\t\titerate(settings.xhrOptions, function(property, value) {\n\t\t\t\t\txhr[property] = value;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\txhr.ontimeout  = xhr.onerror = xhr.onabort = function() {\n\t\t\t\tdeferred.reject(xhr);\n\t\t\t};\n\t\t\txhr.onprogress = xhr.onreadystatechange = function() {\n\t\t\t\tclearTimeout(pointer);\n\n\t\t\t\tpointer = setTimeout(boundCheckState, timeout);\n\t\t\t};\n\t\t\txhr.onload     = function() {\n\t\t\t\tpointer = clearTimeout(pointer);\n\n\t\t\t\tif(!('status' in xhr) || xhr.status === 200) {\n\t\t\t\t\tdeferred.resolve(xhr.responseText, xhr);\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.reject(xhr);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.open(method, url.href, true);\n\n\t\t\tif(xhr.setRequestHeader) {\n\t\t\t\txhr.setRequestHeader('Accept', settings.accept);\n\n\t\t\t\tif(data && method !== 'GET') {\n\t\t\t\t\txhr.setRequestHeader('Content-Type', settings.contentType);\n\t\t\t\t}\n\n\t\t\t\tif(isObject(settings.header)) {\n\t\t\t\t\titerate(settings.header, function(header, value) {\n\t\t\t\t\t\txhr.setRequestHeader(header, value);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txhr.send(data);\n\n\t\t\tpointer = setTimeout(boundCheckState, timeout);\n\n\t\t\treturn deferred.pledge;\n\t\t}\n\n\t\tfunction TransportXhr(url, data, settings) {\n\t\t\tstorage.set(this, {\n\t\t\t\tsettings: functionMerge({}, TransportXhr.settings, settings),\n\t\t\t\turl:      new Url(url),\n\t\t\t\tdata:     data\n\t\t\t});\n\n\t\t\treturn this;\n\t\t}\n\n\t\tTransportXhr.prototype = {\n\t\t\tget:      function() {\n\t\t\t\treturn request.call(this, 'GET');\n\t\t\t},\n\t\t\tpost:     function() {\n\t\t\t\treturn request.call(this, 'POST');\n\t\t\t},\n\t\t\tput:      function() {\n\t\t\t\treturn request.call(this, 'PUT');\n\t\t\t},\n\t\t\tpatch:      function() {\n\t\t\t\treturn request.call(this, 'PATCH');\n\t\t\t},\n\t\t\t'delete': function() {\n\t\t\t\treturn request.call(this, 'DELETE');\n\t\t\t},\n\t\t\thead:     function() {\n\t\t\t\treturn request.call(this, 'HEAD');\n\t\t\t}\n\t\t};\n\n\t\tTransportXhr.settings = {\n\t\t\taccept:      '*/*',\n\t\t\ttimeout:     8000,\n\t\t\tasync:       true,\n\t\t\tcache:       false,\n\t\t\tusername:    null,\n\t\t\tpassword:    null,\n\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n\t\t\theader:      {},\n\t\t\txhrOptions:  {}\n\t\t};\n\n\t\treturn TransportXhr;\n\t}\n\n\tprovide([ '/demand/weakmap', '/demand/pledge', '/demand/validator/isObject', '/demand/function/iterate', '../url', '../function/merge' ], definition);\n}(this, XMLHttpRequest));\n"]}