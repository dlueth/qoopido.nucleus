{"version":3,"sources":["polyfill/window/matchmedia.js"],"names":["global","document","getComputedStyle","provide","iterate","style","target","id","storage","count","onResize","mql","event","i","fn","key","query","matches","check","currentTarget","media","srcElement","timestamp","Date","type","listener","call","Query","index","this","String","source","addListener","push","removeListener","pointer","splice","prototype","textContent","zIndex","getElementsByTagName","createElement","setAttribute","parentNode","insertBefore","addEventListener","matchMedia"],"mappings":"CAMC,SAASA,EAAQC,EAAUC,GAC3B,aA2GAC,SAAU,4BAzGV,SAAoBC,GACnB,IAEYC,EA2BPC,EA7BDC,EAAU,6BACbC,KACAC,EAAQ,EAET,SAASC,IACR,IAAIC,EAAKC,EAAOC,EAAGC,EAEnBV,EAAQI,EAAS,SAASO,EAAKC,GAG9B,IAFAL,EAAQK,EAAML,KAEPM,UAAYD,EAAME,QAWxB,IAVAN,GACCO,cAAeR,EACfM,QAAeN,EAAIM,QACnBG,MAAeT,EAAIS,MACnBC,WAAeV,EACfL,OAAeK,EACfW,WAAgB,IAAIC,KACpBC,KAAe,UAGZX,EAAI,EAAGC,EAAKE,EAAMS,SAASZ,GAAIA,IAClCC,EAAGY,KAAKf,EAAKC,KAqBjB,SAASe,EAAMX,GACd,IACCY,EAAWnB,EAAQ,EACnBgB,KAFcI,KAIVD,MAAWE,OAAOF,GAJRC,KAKVE,OAAW,UAAYf,EAAQ,uBAAyBT,EAAK,iBAAmBqB,EAAQ,QAL9EC,KAMVJ,SAAWA,EANDI,KAOVlB,KACJM,SAAgB,EAChBG,MAAgBJ,EAChBgB,YAAgB,SAAqBlB,GAAMA,GAAMW,EAASQ,KAAKnB,IAC/DoB,eAAgB,SAAwBpB,GAIvC,IAHA,IACCqB,EADGtB,EAAI,EAGFsB,EAAUV,EAASZ,GAAIA,IAC5B,GAAGsB,IAAYrB,EAAI,CAClBW,EAASW,OAAOvB,EAAG,GAEnB,SAMJJ,IAzBeoB,KA2BVX,QA8BN,OA3BAS,EAAMU,WAOLnB,MAAO,WACN,IACCD,EAMD,OAJAZ,EAAMiC,YAHKT,KAGcE,OACzBd,EAAoBa,OAAO5B,EAAiBG,GAAOkC,UAJxCV,KAIyDD,MACpEvB,EAAMiC,YAAc,GALTT,KAOElB,IAAIM,QAAUA,IAIxB,eAAgBjB,IAhEhBM,EAASL,EAASuC,qBAAqB,UAAU,IAErDnC,EAAcJ,EAASwC,cAAc,UAC/BjB,KAAQ,WAEdnB,EAAMqC,aAAa,iBAAkBnC,GACrCF,EAAMqC,aAAa,QAAS,6EAE5BpC,EAAOqC,WAAWC,aAAavC,EAAOC,GAEtCN,EAAO6C,iBAAiB,SAAUnC,GAClCV,EAAO6C,iBAAiB,oBAAqBnC,GAwD7CV,EAAO8C,WAAa,SAAkC9B,GACrD,OAAQR,EAAQQ,KAAWR,EAAQQ,GAAS,IAAIW,EAAMX,KAASL,MAI1DX,EAAO8C,aAzGhB,CA6GEjB,KAAM5B,SAAUC","file":"matchmedia.js","sourcesContent":["/**\n * @use /demand/function/iterate\n *\n * @browsers Chrome < 9, Firefox < 6, Internet Explorer < 10, Opera < 12.1, Safari < 5.1\n */\n\n(function(global, document, getComputedStyle) {\n\t'use strict';\n\n\tfunction definition(iterate) {\n\t\tvar id      = 'polyfill/window/matchmedia',\n\t\t\tstorage = {},\n\t\t\tcount = 0, style;\n\n\t\tfunction onResize() {\n\t\t\tvar mql, event, i, fn;\n\n\t\t\titerate(storage, function(key, query) {\n\t\t\t\tmql   = query.mql;\n\n\t\t\t\tif(mql.matches !== query.check()) {\n\t\t\t\t\tevent = {\n\t\t\t\t\t\tcurrentTarget: mql,\n\t\t\t\t\t\tmatches:       mql.matches,\n\t\t\t\t\t\tmedia:         mql.media,\n\t\t\t\t\t\tsrcElement:    mql,\n\t\t\t\t\t\ttarget:        mql,\n\t\t\t\t\t\ttimestamp:     +new Date(),\n\t\t\t\t\t\ttype:          'change'\n\t\t\t\t\t};\n\n\t\t\t\t\tfor(i = 0; fn = query.listener[i]; i++) {\n\t\t\t\t\t\tfn.call(mql, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfunction initialize() {\n\t\t\tvar target = document.getElementsByTagName('script')[0];\n\n\t\t\tstyle       = document.createElement('style');\n\t\t\tstyle.type  = 'text/css';\n\n\t\t\tstyle.setAttribute('nucleus-source', id);\n\t\t\tstyle.setAttribute('style', 'display: none; position: absolute; width: 0; height: 0; overflow: hidden;');\n\n\t\t\ttarget.parentNode.insertBefore(style, target);\n\n\t\t\tglobal.addEventListener('resize', onResize);\n\t\t\tglobal.addEventListener('orientationchange', onResize);\n\t\t}\n\n\t\tfunction Query(query) {\n\t\t\tvar self     = this,\n\t\t\t\tindex    = count + 1,\n\t\t\t\tlistener = [];\n\n\t\t\tself.index    = String(index);\n\t\t\tself.source   = '@media ' + query + ' { [nucleus-source=\"' + id + '\"] { z-index: ' + index + '; } }';\n\t\t\tself.listener = listener;\n\t\t\tself.mql      = {\n\t\t\t\tmatches:        false,\n\t\t\t\tmedia:          query,\n\t\t\t\taddListener:    function addListener(fn) { fn && listener.push(fn); },\n\t\t\t\tremoveListener: function removeListener(fn) {\n\t\t\t\t\tvar i = 0,\n\t\t\t\t\t\tpointer;\n\n\t\t\t\t\tfor(; pointer = listener[i]; i++) {\n\t\t\t\t\t\tif(pointer === fn) {\n\t\t\t\t\t\t\tlistener.splice(i, 1);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tcount++;\n\n\t\t\tself.check();\n\t\t}\n\n\t\tQuery.prototype = {\n\t\t\t/* only for reference\n\t\t\tindex:    null,\n\t\t\tsource:   null,\n\t\t\tlistener: null,\n\t\t\tmql:      null,\n\t\t\t*/\n\t\t\tcheck: function() {\n\t\t\t\tvar self = this,\n\t\t\t\t\tmatches;\n\n\t\t\t\tstyle.textContent = self.source;\n\t\t\t\tmatches           = String(getComputedStyle(style).zIndex) === self.index;\n\t\t\t\tstyle.textContent = '';\n\n\t\t\t\treturn (self.mql.matches = matches);\n\t\t\t}\n\t\t};\n\n\t\tif(!('matchMedia' in global)) {\n\t\t\tinitialize();\n\n\t\t\tglobal.matchMedia = function polyfillWindowMatchmedia(query) {\n\t\t\t\treturn (storage[query] || (storage[query] = new Query(query))).mql;\n\t\t\t};\n\t\t}\n\n\t\treturn global.matchMedia;\n\t}\n\n\tprovide([ '/demand/function/iterate' ], definition);\n}(this, document, getComputedStyle));"]}