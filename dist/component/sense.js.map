{"version":3,"sources":["component/sense.js"],"names":["global","provide","matchMedia","Emitter","storage","ComponentSense","query","self","call","this","mql","uuid","addListener","emit","matches","prototype","extends"],"mappings":"CAMC,SAASA,GACT,aA+BAC,SAAU,aAAcD,EAAOE,YAAc,iCA7B7C,SAAoBC,EAASD,GAC5B,IAAIE,KAEJ,SAASC,EAAeC,GACvB,IAAIC,EAAOJ,EAAQK,KAAKC,MACvBC,EAAOR,EAAWI,GAQnB,OANAF,EAAQG,EAAKI,MAAQD,EAErBA,EAAIE,YAAY,WACfL,EAAKM,MAAqB,IAAhBH,EAAII,QAAmB,QAAU,aAGrCP,EAaR,OAVAF,EAAeU,WACdD,cACC,IAAIJ,EAAMN,EAAQK,KAAKE,MAEvB,GAAGD,EACF,OAAOA,EAAII,UAKPT,EAAeW,QAAQb,KA7BhC,CAiCEM","file":"sense.js","sourcesContent":["/**\n * @require ../emitter\n *\n * @polyfill ../polyfill/window/matchmedia\n */\n\n(function(global) {\n\t'use strict';\n\n\tfunction definition(Emitter, matchMedia) {\n\t\tvar storage = {};\n\n\t\tfunction ComponentSense(query) {\n\t\t\tvar self = Emitter.call(this),\n\t\t\t\tmql  = matchMedia(query);\n\n\t\t\tstorage[self.uuid] = mql;\n\n\t\t\tmql.addListener(function() {\n\t\t\t\tself.emit(mql.matches === true ? 'match' : 'unmatch');\n\t\t\t});\n\n\t\t\treturn self;\n\t\t}\n\n\t\tComponentSense.prototype = {\n\t\t\tget matches() {\n\t\t\t\tvar mql = storage[this.uuid];\n\n\t\t\t\tif(mql) {\n\t\t\t\t\treturn mql.matches;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn ComponentSense.extends(Emitter);\n\t}\n\n\tprovide([ '../emitter', global.matchMedia || '../polyfill/window/matchmedia' ], definition);\n}(this));"]}